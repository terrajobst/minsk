<Project>

  <PropertyGroup>
    <Features>Strict</Features>
    <Nullable>Enable</Nullable>
    <LangVersion>Preview</LangVersion>
  </PropertyGroup>

  <PropertyGroup>
    <SolutionDir Condition="'$(SolutionDir)' == ''">$(MSBuildThisFileDirectory)</SolutionDir>
    <RepositoryDir Condition="'$(RepositoryDir)' == ''">$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', '..\'))</RepositoryDir>
  </PropertyGroup>

  <ItemGroup Condition="'$(IsPackable)' == 'true'">
    <Content Include="$(PackageIconPath)" Visible="false"/>
    <Content Include="$(PackageLicensePath)" Visible="false"/>
  </ItemGroup>

  <ItemGroup Condition="'$(EnableDefaultBuildItems)' == 'true'">
    <Content Include="$(DefaultBuildItemIncludes)" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)"/>
  </ItemGroup>

  <!--
      Since we're only targeting single framework, we don't need to append
      the short TFM and RID to the output paths.
  -->
  <PropertyGroup>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
  </PropertyGroup>

  <!--
      HACK:
      VS Code currently doesn't support Roslyn generators (VS 16.6+ does, tho).
      In order to void seeing errors in VS Code and to get IntelliSense,
      we're doing a trick:

      1. The generator writes the file to disk, using the *.g.cs naming
         convention (borrowed from WPF).
      2. In MSBuild we're excluding those files

      Since VS Code's C# extension (or more specifically OmniSharp) doesn't
      resolve items from MSBuild, it will include the file while neither
      VS nor the CLI/CI build will.

      Also include the generated file in Rider, which retrieves items from
      MSBuild, but doesn't currently support generators.
  -->
  <PropertyGroup>
    <GeneratedSources>**/*.g.cs</GeneratedSources>
    <DefaultItemExcludes Condition="'$(JetBrainsDesignTimeBuild)' == ''">$(DefaultItemExcludes);$(GeneratedSources)</DefaultItemExcludes>
  </PropertyGroup>

</Project>